{"includedArchiveIdentifiers":["uint128.UInt128"],"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/__=(_:_:)-2lfrd","title":"static func >>= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/__=(_:_:)-48ww0","title":"static func <<= (inout `Self`, `Self`)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init()-9n366","title":"init()","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:)-1lwdp","title":"init(Magnitude)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:)-82b8h","title":"init((high: High, low: Low))","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:radix:)-pof","title":"init?<S>(S, radix: Int)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(bitpattern:)","title":"init(bitPattern: UInt128)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(high:low:)","title":"init(high: High, low: Low)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(integerliteral:)-60502","title":"init(integerLiteral: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/components","title":"var components: (high: High, low: Low)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/multiplied(by:)","title":"func multiplied(by: UInt64) -> Int128","type":"method"},{"path":"\/documentation\/uint128\/int128\/multipliedreportingoverflow(by:)-7w6ch","title":"func multipliedReportingOverflow(by: UInt64) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/high","title":"Int128.High","type":"typealias"},{"path":"\/documentation\/uint128\/int128\/low","title":"Int128.Low","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/one","title":"static var one: `Self`","type":"property"},{"path":"\/documentation\/uint128\/int128\/zero-9fktf","title":"static var zero: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/+(_:_:)","title":"static func + (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/+=(_:_:)-5n177","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/int128\/+=(_:_:)-922mc","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/-(_:_:)","title":"static func - (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/-=(_:_:)-4umc4","title":"static func -= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/int128\/-=(_:_:)-szcv","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/zero-3qizm","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/uint128\/int128\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/firstrange(of:)-1lfnn","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/uint128\/int128\/words-swift.struct\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/firstrange(of:)-5krtd","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/map(_:)-61sv1","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/subscript(_:)","title":"subscript(Int) -> UInt","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/index","title":"Int128.Words.Index","type":"typealias"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/indices-swift.typealias","title":"Int128.Words.Indices","type":"typealias"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/subsequence","title":"Int128.Words.SubSequence","type":"typealias"}],"path":"\/documentation\/uint128\/int128\/words-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/indices-swift.property","title":"var indices: Indices","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/index(before:)","title":"func index(before: Int) -> Int","type":"method"}],"path":"\/documentation\/uint128\/int128\/words-swift.struct\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/flatmap(_:)-1fzwa","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/flatmap(_:)-6p5y3","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/map(_:)-9e7e9","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/words-swift.struct\/element","title":"Int128.Words.Element","type":"typealias"}],"path":"\/documentation\/uint128\/int128\/words-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/uint128\/int128\/words-swift.struct","title":"Int128.Words","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/!=(_:_:)-8uw37","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/!=(_:_:)-9yznj","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&=(_:_:)","title":"static func &= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/==(_:_:)-4dunm","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-15iq2","title":"static func \/ (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-25qp4","title":"static func % (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-5ugxg","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-7pnzf","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-8c8e5","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-qxy7","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-1ox1c","title":"static func |= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-6ilh7","title":"static func \/= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-6z4fn","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-7acri","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-926dz","title":"static func ^= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-9mlwk","title":"static func %= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/__(_:_:)-6fhfj","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/__(_:_:)-70e82","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/__=(_:_:)-57zg7","title":"static func <<= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/int128\/__=(_:_:)-ksub","title":"static func >>= <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init()-50zsu","title":"init()","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:)-2ojoh","title":"init<T>(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/words-swift.property","title":"var words: Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/advanced(by:)","title":"func advanced(by: Int) -> Self","type":"method"},{"path":"\/documentation\/uint128\/int128\/distance(to:)","title":"func distance(to: Self) -> Int","type":"method"},{"path":"\/documentation\/uint128\/int128\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/int128\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: `Self`) -> (quotient: `Self`, remainder: `Self`)","type":"method"},{"path":"\/documentation\/uint128\/int128\/signum()","title":"func signum() -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/issigned-3qbcx","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/uint128\/int128\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/'...(_:)-2oqtt","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/uint128\/int128\/'...(_:)-34ltt","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/uint128\/int128\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/uint128\/int128\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/uint128\/int128\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-3bxve","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-3r1yi","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-6ktfo","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_(_:_:)-97zv4","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-2o5k1","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-5lce7","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-6zzh4","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/_=(_:_:)-9x4cj","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/uint128\/int128\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/uint128\/int128\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/uint128\/int128\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/!=(_:_:)-4r5f7","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/==(_:_:)-33351","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/int128\/==(_:_:)-3o3nk","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/uint128\/int128\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init(integerliteral:)-6j8ct","title":"init(integerLiteral: StaticBigInt)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/integerliteraltype","title":"Int128.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/uint128\/int128\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/&*(_:_:)","title":"static func &* (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&*=(_:_:)","title":"static func &*= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&+(_:_:)","title":"static func &+ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&+=(_:_:)","title":"static func &+= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&-(_:_:)","title":"static func &- (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&-=(_:_:)","title":"static func &-= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-1gqmw","title":"static func &>> (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-2fbxy","title":"static func &<< <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-36hki","title":"static func &<< (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-4ea2m","title":"static func &>> (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-7c5v8","title":"static func &<< (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__(_:_:)-ksnw","title":"static func &>> <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__=(_:_:)-1v4of","title":"static func &>>= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__=(_:_:)-5d67e","title":"static func &>>= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__=(_:_:)-63z41","title":"static func &<<= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/int128\/&__=(_:_:)-70tjb","title":"static func &<<= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/int128\/__(_:_:)-3psb7","title":"static func >> <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/__(_:_:)-7nvlv","title":"static func << <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/int128\/~(_:)","title":"static func ~ (Self) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init(_:)-5s7c3","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:)-612k8","title":"init?(String)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(_:radix:)-7vu35","title":"init?<S>(S, radix: Int)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(bigendian:)","title":"init(bigEndian: Self)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(clamping:)","title":"init<Other>(clamping: Other)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(exactly:)-5h05o","title":"init?<T>(exactly: T)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(littleendian:)","title":"init(littleEndian: Self)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(truncatingifneeded:)","title":"init<T>(truncatingIfNeeded: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/bigendian","title":"var bigEndian: Self","type":"property"},{"path":"\/documentation\/uint128\/int128\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/byteswapped","title":"var byteSwapped: `Self`","type":"property"},{"path":"\/documentation\/uint128\/int128\/leadingzerobitcount","title":"var leadingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/littleendian","title":"var littleEndian: Self","type":"property"},{"path":"\/documentation\/uint128\/int128\/nonzerobitcount","title":"var nonzeroBitCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/addingreportingoverflow(_:)","title":"func addingReportingOverflow(`Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/int128\/dividedreportingoverflow(by:)","title":"func dividedReportingOverflow(by: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/int128\/dividingfullwidth(_:)","title":"func dividingFullWidth((high: `Self`, low: `Self`.Magnitude)) -> (quotient: `Self`, remainder: `Self`)","type":"method"},{"path":"\/documentation\/uint128\/int128\/multipliedfullwidth(by:)","title":"func multipliedFullWidth(by: `Self`) -> (high: `Self`, low: Magnitude)","type":"method"},{"path":"\/documentation\/uint128\/int128\/multipliedreportingoverflow(by:)-j9ru","title":"func multipliedReportingOverflow(by: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/int128\/remainderreportingoverflow(dividingby:)","title":"func remainderReportingOverflow(dividingBy: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/int128\/subtractingreportingoverflow(_:)","title":"func subtractingReportingOverflow(`Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/bitwidth-swift.type.property","title":"static var bitWidth: Int","type":"property"},{"path":"\/documentation\/uint128\/int128\/max-c1fc","title":"static var max: `Self`","type":"property"},{"path":"\/documentation\/uint128\/int128\/min-6va8o","title":"static var min: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/random(in:)-5u94q","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/uint128\/int128\/random(in:)-i0ee","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/uint128\/int128\/random(in:using:)-4wrzz","title":"static func random<T>(in: ClosedRange<Self>, using: inout T) -> Self","type":"method"},{"path":"\/documentation\/uint128\/int128\/random(in:using:)-5r6ok","title":"static func random<T>(in: Range<Self>, using: inout T) -> Self","type":"method"}],"path":"\/documentation\/uint128\/int128\/fixedwidthinteger-implementations","title":"FixedWidthInteger Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/uint128\/int128\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init(_:)-2ur2p","title":"init?(String)","type":"init"}],"path":"\/documentation\/uint128\/int128\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/*(_:_:)","title":"static func * (`Self`, `Self`) -> Int128","type":"op"},{"path":"\/documentation\/uint128\/int128\/*=(_:_:)","title":"static func *= (inout `Self`, `Self`)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init(exactly:)-4rnng","title":"init?<T>(exactly: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/magnitude-swift.property","title":"var magnitude: Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/magnitude-swift.typealias","title":"Int128.Magnitude","type":"typealias"}],"path":"\/documentation\/uint128\/int128\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/init(_:)-3a861","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/uint128\/int128\/init(exactly:)-7my0z","title":"init?<T>(exactly: T)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/issigned-9z3ie","title":"static var isSigned: Bool","type":"property"},{"path":"\/documentation\/uint128\/int128\/max-3c7dh","title":"static var max: Self","type":"property"},{"path":"\/documentation\/uint128\/int128\/min-7bg8z","title":"static var min: Self","type":"property"}],"path":"\/documentation\/uint128\/int128\/signedinteger-implementations","title":"SignedInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/-(_:)","title":"static func - (Self) -> Self","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/int128\/negate()","title":"func negate()","type":"method"}],"path":"\/documentation\/uint128\/int128\/signednumeric-implementations","title":"SignedNumeric Implementations","type":"symbol"}],"path":"\/documentation\/uint128\/int128","title":"Int128","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/__=(_:_:)-5yrdh","title":"static func <<= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__=(_:_:)-60vyp","title":"static func >>= (inout `Self`, `Self`)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init()-35zs4","title":"init()","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-4ch4y","title":"init(Magnitude)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-87u8t","title":"init((high: High, low: Low))","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:radix:)-bz5y","title":"init?<S>(S, radix: Int)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(bitpattern:)","title":"init(bitPattern: Int128)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(high:low:)","title":"init(high: High, low: Low)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(integerliteral:)-3j34y","title":"init(integerLiteral: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/components","title":"var components: (high: High, low: Low)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/multiplied(by:)","title":"func multiplied(by: UInt64) -> UInt128","type":"method"},{"path":"\/documentation\/uint128\/uint128\/multipliedreportingoverflow(by:)-1abfq","title":"func multipliedReportingOverflow(by: UInt64) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/high","title":"UInt128.High","type":"typealias"},{"path":"\/documentation\/uint128\/uint128\/low","title":"UInt128.Low","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/one","title":"static var one: `Self`","type":"property"},{"path":"\/documentation\/uint128\/uint128\/zero-2duib","title":"static var zero: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/+(_:)","title":"static func + (Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/+(_:_:)","title":"static func + (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/+=(_:_:)-39x1b","title":"static func += (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/+=(_:_:)-6ipjj","title":"static func += (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/-(_:_:)","title":"static func - (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/-=(_:_:)-15cb0","title":"static func -= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/-=(_:_:)-196rg","title":"static func -= (inout Self, Self)","type":"op"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/zero-47tiz","title":"static var zero: Self","type":"property"}],"path":"\/documentation\/uint128\/uint128\/additivearithmetic-implementations","title":"AdditiveArithmetic Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/firstrange(of:)-2ftzv","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/firstrange(of:)-4xv9h","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/indices(of:)","title":"func indices(of: Self.Element) -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/indices(where:)","title":"func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/map(_:)-6v9b3","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/removingsubranges(_:)","title":"func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/subscript(_:)","title":"subscript(Int) -> UInt","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/index","title":"UInt128.Words.Index","type":"typealias"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/indices-swift.typealias","title":"UInt128.Words.Indices","type":"typealias"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/subsequence","title":"UInt128.Words.SubSequence","type":"typealias"}],"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/indices-swift.property","title":"var indices: Indices","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/index(before:)","title":"func index(before: Int) -> Int","type":"method"}],"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/flatmap(_:)-31nn8","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/flatmap(_:)-3gxvy","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/map(_:)-pxcb","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/element","title":"UInt128.Words.Element","type":"typealias"}],"path":"\/documentation\/uint128\/uint128\/words-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/uint128\/uint128\/words-swift.struct","title":"UInt128.Words","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/!=(_:_:)-1qhiw","title":"static func != <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/!=(_:_:)-3x5u3","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&(_:_:)","title":"static func & (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&=(_:_:)","title":"static func &= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/==(_:_:)-6wo7h","title":"static func == <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-18aod","title":"static func | (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-2iyze","title":"static func % (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-458dk","title":"static func ^ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-52ab1","title":"static func > <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-9482e","title":"static func \/ (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-i5rt","title":"static func < <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-26py1","title":"static func ^= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-2ikkh","title":"static func \/= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-2ybhc","title":"static func >= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-8ttza","title":"static func <= <Other>(Self, Other) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-k9oo","title":"static func |= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-zin","title":"static func %= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__(_:_:)-84bet","title":"static func << <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__(_:_:)-87qt3","title":"static func >> <RHS>(Self, RHS) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__=(_:_:)-31cjo","title":"static func <<= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__=(_:_:)-5ivq3","title":"static func >>= <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init()-7kubl","title":"init()","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-8ms0v","title":"init<T>(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/trailingzerobitcount","title":"var trailingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/words-swift.property","title":"var words: Words","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/advanced(by:)","title":"func advanced(by: Int) -> Self","type":"method"},{"path":"\/documentation\/uint128\/uint128\/distance(to:)","title":"func distance(to: Self) -> Int","type":"method"},{"path":"\/documentation\/uint128\/uint128\/ismultiple(of:)","title":"func isMultiple(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/uint128\/uint128\/quotientandremainder(dividingby:)","title":"func quotientAndRemainder(dividingBy: `Self`) -> (quotient: `Self`, remainder: `Self`)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/signum()","title":"func signum() -> Self","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/issigned-4wr3y","title":"static var isSigned: Bool","type":"property"}],"path":"\/documentation\/uint128\/uint128\/binaryinteger-implementations","title":"BinaryInteger Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/'...(_:)-4ayex","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/uint128\/uint128\/'...(_:)-9z9kv","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/uint128\/uint128\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/uint128\/uint128\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/uint128\/uint128\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-1cnhl","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-8lghp","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-9m3ou","title":"static func < (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_(_:_:)-uanf","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-3ccv9","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-3jspp","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-7q2pk","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/_=(_:_:)-n06k","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/uint128\/uint128\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/uint128\/uint128\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/uint128\/uint128\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/!=(_:_:)-8nix9","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/==(_:_:)-17g0l","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/uint128\/uint128\/==(_:_:)-6ixd2","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/uint128\/uint128\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init(integerliteral:)-6voj4","title":"init(integerLiteral: StaticBigInt)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/integerliteraltype","title":"UInt128.IntegerLiteralType","type":"typealias"}],"path":"\/documentation\/uint128\/uint128\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/&*(_:_:)","title":"static func &* (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&*=(_:_:)","title":"static func &*= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&+(_:_:)","title":"static func &+ (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&+=(_:_:)","title":"static func &+= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&-(_:_:)","title":"static func &- (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&-=(_:_:)","title":"static func &-= (inout Self, Self)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-2jc6w","title":"static func &<< <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-4xlup","title":"static func &>> (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-5zc2k","title":"static func &>> (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-75uhy","title":"static func &<< (Self, Self) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-7xm1e","title":"static func &>> <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__(_:_:)-9j8kp","title":"static func &<< (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__=(_:_:)-4qasx","title":"static func &>>= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__=(_:_:)-6ad8e","title":"static func &>>= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__=(_:_:)-77y3y","title":"static func &<<= <Other>(inout Self, Other)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/&__=(_:_:)-7dpoq","title":"static func &<<= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__(_:_:)-9adx7","title":"static func << <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/__(_:_:)-9rgvj","title":"static func >> <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/uint128\/uint128\/~(_:)","title":"static func ~ (Self) -> Self","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-6d88p","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-g8c4","title":"init?(String)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(_:radix:)-2hs61","title":"init?<S>(S, radix: Int)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(bigendian:)","title":"init(bigEndian: Self)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(clamping:)","title":"init<Other>(clamping: Other)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(exactly:)-318b9","title":"init?<T>(exactly: T)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(littleendian:)","title":"init(littleEndian: Self)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(truncatingifneeded:)","title":"init<T>(truncatingIfNeeded: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/bigendian","title":"var bigEndian: Self","type":"property"},{"path":"\/documentation\/uint128\/uint128\/bitwidth-swift.property","title":"var bitWidth: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/byteswapped","title":"var byteSwapped: `Self`","type":"property"},{"path":"\/documentation\/uint128\/uint128\/leadingzerobitcount","title":"var leadingZeroBitCount: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/littleendian","title":"var littleEndian: Self","type":"property"},{"path":"\/documentation\/uint128\/uint128\/nonzerobitcount","title":"var nonzeroBitCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/addingreportingoverflow(_:)","title":"func addingReportingOverflow(`Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/dividedreportingoverflow(by:)","title":"func dividedReportingOverflow(by: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/dividingfullwidth(_:)","title":"func dividingFullWidth((high: `Self`, low: `Self`.Magnitude)) -> (quotient: `Self`, remainder: `Self`)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/multipliedfullwidth(by:)","title":"func multipliedFullWidth(by: `Self`) -> (high: `Self`, low: Magnitude)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/multipliedreportingoverflow(by:)-7f8es","title":"func multipliedReportingOverflow(by: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/remainderreportingoverflow(dividingby:)","title":"func remainderReportingOverflow(dividingBy: `Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"path":"\/documentation\/uint128\/uint128\/subtractingreportingoverflow(_:)","title":"func subtractingReportingOverflow(`Self`) -> (partialValue: `Self`, overflow: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/bitwidth-swift.type.property","title":"static var bitWidth: Int","type":"property"},{"path":"\/documentation\/uint128\/uint128\/max-5lw0s","title":"static var max: `Self`","type":"property"},{"path":"\/documentation\/uint128\/uint128\/min-9m8a9","title":"static var min: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/random(in:)-5yk40","title":"static func random(in: Range<Self>) -> Self","type":"method"},{"path":"\/documentation\/uint128\/uint128\/random(in:)-6a48d","title":"static func random(in: ClosedRange<Self>) -> Self","type":"method"},{"path":"\/documentation\/uint128\/uint128\/random(in:using:)-4svw6","title":"static func random<T>(in: ClosedRange<Self>, using: inout T) -> Self","type":"method"},{"path":"\/documentation\/uint128\/uint128\/random(in:using:)-9ypxo","title":"static func random<T>(in: Range<Self>, using: inout T) -> Self","type":"method"}],"path":"\/documentation\/uint128\/uint128\/fixedwidthinteger-implementations","title":"FixedWidthInteger Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/uint128\/uint128\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-7m428","title":"init?(String)","type":"init"}],"path":"\/documentation\/uint128\/uint128\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/*(_:_:)","title":"static func * (`Self`, `Self`) -> UInt128","type":"op"},{"path":"\/documentation\/uint128\/uint128\/*=(_:_:)","title":"static func *= (inout `Self`, `Self`)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init(exactly:)-dxng","title":"init?<T>(exactly: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/magnitude-swift.property","title":"var magnitude: Magnitude","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/magnitude-swift.typealias","title":"UInt128.Magnitude","type":"typealias"}],"path":"\/documentation\/uint128\/uint128\/numeric-implementations","title":"Numeric Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/init(_:)-4wqec","title":"init<T>(T)","type":"init"},{"path":"\/documentation\/uint128\/uint128\/init(exactly:)-2l63s","title":"init?<T>(exactly: T)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/uint128\/uint128\/issigned-gw6c","title":"static var isSigned: Bool","type":"property"},{"path":"\/documentation\/uint128\/uint128\/max-8hsuc","title":"static var max: Self","type":"property"},{"path":"\/documentation\/uint128\/uint128\/min-720nw","title":"static var min: Self","type":"property"}],"path":"\/documentation\/uint128\/uint128\/unsignedinteger-implementations","title":"UnsignedInteger Implementations","type":"symbol"}],"path":"\/documentation\/uint128\/uint128","title":"UInt128","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"path":"\/documentation\/uint128\/swift\/binaryfloatingpoint","title":"BinaryFloatingPoint","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/uint128\/swift\/string\/init(_:radix:uppercase:)-5ops9","title":"init(Int128, radix: Int, uppercase: Bool)","type":"init"},{"path":"\/documentation\/uint128\/swift\/string\/init(_:radix:uppercase:)-acxr","title":"init(UInt128, radix: Int, uppercase: Bool)","type":"init"}],"path":"\/documentation\/uint128\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/uint128\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/uint128","title":"UInt128","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}